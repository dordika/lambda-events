# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: create-events
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  runtime: java8
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:GetRecords
            - dynamodb:GetShardIterator
            - dynamodb:DescribeStream
            - dynamodb:ListShards
            - dynamodb:ListStreams
          Resource:
            Fn::GetAtt:
              - EventDynamoDBTable
              - Arn
        - Effect: 'Allow'
          Action:
            - ses:SendEmail
          Resource: "*"

package:
  artifact: target/event-dev.jar

functions:
  createEvent:
    handler: com.serverless.CreateEventHandler
    events:
      - http:
          path: /events
          method: post
  sendNotification:
    handler: com.serverless.SendNotificationHandler
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - EventDynamoDBTable
              - StreamArn

resources:
  Resources:
    EventDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: events-aws-java
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
